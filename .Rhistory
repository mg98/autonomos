theme_bw(base_size = 12) +
theme(
legend.position = "bottom",
legend.direction = "horizontal",
legend.background = element_blank(),     # no frame
legend.box.background = element_blank(), # no surrounding box
legend.key = element_blank(),            # no key boxes
legend.margin = margin(0, 0, 0, 0),
legend.box.spacing = unit(2, "pt"),
panel.grid.major = element_line(linetype = "dashed"),
axis.title = element_text(size = 9),
axis.text = element_text(size = 9),
plot.margin = margin(t = 2, r = 2, b = 2, l = 2, unit = "pt")
)
print_plot(p3, "dsi", height=2)
# Plot
p3 <- ggplot(df_all, aes(x = hours, y = test_acc, color = docs, linetype = docs, shape = docs)) +
geom_line() +
geom_point(size = 1) +
scale_color_brewer(
palette = "Set1",
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
scale_linetype_manual(
values = c("100" = "dashed", "1000" = "solid", "5000" = "dotdash"),
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
scale_shape_manual(
values = c("100" = 15, "1000" = 16, "5000" = 17),
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
guides(
color = guide_legend(override.aes = list(shape = c(15, 16, 17))),
shape = "none"
) +
labs(x = "Hours",
y = "Accuracy",
color = NULL,
linetype = NULL) +
theme_bw(base_size = 12) +
theme(
legend.position = "bottom",
legend.direction = "horizontal",
legend.background = element_blank(),     # no frame
legend.box.background = element_blank(), # no surrounding box
legend.key = element_blank(),            # no key boxes
legend.margin = margin(0, 0, 0, 0),
legend.box.spacing = unit(2, "pt"),
panel.grid.major = element_line(linetype = "dashed"),
axis.title = element_text(size = 9),
axis.text = element_text(size = 9),
plot.margin = margin(t = 2, r = 2, b = 2, l = 2, unit = "pt")
)
print_plot(p3, "dsi", height=2)
ggplot(df_all, aes(x = hours, y = test_acc, color = docs, linetype = docs, shape = docs)) +
geom_line() +
geom_point(size = 1) +
scale_color_brewer(
palette = "Set1",
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
scale_linetype_manual(
values = c("100" = "dashed", "1000" = "solid", "5000" = "dotdash"),
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
scale_color_manual(
values = c(
"100" = "#377EB8",   # blue
"1000" = "#4DAF4A",  # green
"5000" = "#984EA3"   # purple
),
labels = c(
"100" = "100 docs",
"1000" = "1000 docs",
"5000" = "5000 docs"
)
)
guides(
color = guide_legend(override.aes = list(shape = c(15, 16, 17))),
shape = "none"
) +
labs(x = "Hours",
y = "Accuracy",
color = NULL,
linetype = NULL) +
theme_bw(base_size = 12) +
theme(
legend.position = "bottom",
legend.direction = "horizontal",
legend.background = element_blank(),     # no frame
legend.box.background = element_blank(), # no surrounding box
legend.key = element_blank(),            # no key boxes
legend.margin = margin(0, 0, 0, 0),
legend.box.spacing = unit(2, "pt"),
panel.grid.major = element_line(linetype = "dashed"),
axis.title = element_text(size = 9),
axis.text = element_text(size = 9),
plot.margin = margin(t = 2, r = 2, b = 2, l = 2, unit = "pt")
)
df_all <- df_all %>%
mutate(timestamp = ymd_hms(timestamp)) %>%
group_by(docs) %>%
mutate(hours = as.numeric(difftime(timestamp, min(timestamp), units = "hours"))) %>%
ungroup() %>%
filter(hours <= 20)
# Plot
p3 <- ggplot(df_all, aes(x = hours, y = test_acc, color = docs, linetype = docs, shape = docs)) +
geom_line() +
geom_point(size = 1) +
scale_color_brewer(
palette = "Set1",
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
scale_linetype_manual(
values = c("100" = "dashed", "1000" = "solid", "5000" = "dotdash"),
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
scale_shape_manual(
values = c("100" = 15, "1000" = 16, "5000" = 17),
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
guides(
color = guide_legend(override.aes = list(shape = c(15, 16, 17))),
shape = "none"
) +
labs(x = "Hours",
y = "Accuracy",
color = NULL,
linetype = NULL) +
theme_bw(base_size = 12) +
theme(
legend.position = "bottom",
legend.direction = "horizontal",
legend.background = element_blank(),     # no frame
legend.box.background = element_blank(), # no surrounding box
legend.key = element_blank(),            # no key boxes
legend.margin = margin(0, 0, 0, 0),
legend.box.spacing = unit(2, "pt"),
panel.grid.major = element_line(linetype = "dashed"),
axis.title = element_text(size = 9),
axis.text = element_text(size = 9),
plot.margin = margin(t = 2, r = 2, b = 2, l = 2, unit = "pt")
)
p3
print_plot(p3, "dsi", height=2)
df_all <- bind_rows(df_100, df_1000, df_5000) %>%
mutate(timestamp = ymd_hms(timestamp)) %>%
group_by(docs) %>%
mutate(hours = as.numeric(difftime(timestamp, min(timestamp), units = "hours"))) %>%
ungroup() %>%
filter(hours <= 16)
# Plot
p3 <- ggplot(df_all, aes(x = hours, y = test_acc, color = docs, linetype = docs, shape = docs)) +
geom_line() +
geom_point(size = 1) +
scale_color_brewer(
palette = "Set1",
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
scale_linetype_manual(
values = c("100" = "dashed", "1000" = "solid", "5000" = "dotdash"),
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
scale_shape_manual(
values = c("100" = 15, "1000" = 16, "5000" = 17),
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
guides(
color = guide_legend(override.aes = list(shape = c(15, 16, 17))),
shape = "none"
) +
labs(x = "Hours",
y = "Accuracy",
color = NULL,
linetype = NULL) +
theme_bw(base_size = 12) +
theme(
legend.position = "bottom",
legend.direction = "horizontal",
legend.background = element_blank(),     # no frame
legend.box.background = element_blank(), # no surrounding box
legend.key = element_blank(),            # no key boxes
legend.margin = margin(0, 0, 0, 0),
legend.box.spacing = unit(2, "pt"),
panel.grid.major = element_line(linetype = "dashed"),
axis.title = element_text(size = 9),
axis.text = element_text(size = 9),
plot.margin = margin(t = 2, r = 2, b = 2, l = 2, unit = "pt")
)
p3
print_plot(p3, "dsi", height=2)
df_all <- bind_rows(df_100, df_1000, df_5000) %>%
mutate(timestamp = ymd_hms(timestamp)) %>%
group_by(docs) %>%
mutate(hours = as.numeric(difftime(timestamp, min(timestamp), units = "hours"))) %>%
ungroup() %>%
filter(hours <= 8)
# Plot
p3 <- ggplot(df_all, aes(x = hours, y = test_acc, color = docs, linetype = docs, shape = docs)) +
geom_line() +
geom_point(size = 1) +
scale_color_brewer(
palette = "Set1",
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
scale_linetype_manual(
values = c("100" = "dashed", "1000" = "solid", "5000" = "dotdash"),
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
scale_shape_manual(
values = c("100" = 15, "1000" = 16, "5000" = 17),
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
guides(
color = guide_legend(override.aes = list(shape = c(15, 16, 17))),
shape = "none"
) +
labs(x = "Hours",
y = "Accuracy",
color = NULL,
linetype = NULL) +
theme_bw(base_size = 12) +
theme(
legend.position = "bottom",
legend.direction = "horizontal",
legend.background = element_blank(),     # no frame
legend.box.background = element_blank(), # no surrounding box
legend.key = element_blank(),            # no key boxes
legend.margin = margin(0, 0, 0, 0),
legend.box.spacing = unit(2, "pt"),
panel.grid.major = element_line(linetype = "dashed"),
axis.title = element_text(size = 9),
axis.text = element_text(size = 9),
plot.margin = margin(t = 2, r = 2, b = 2, l = 2, unit = "pt")
)
print_plot(p3, "dsi", height=2)
# Display both plots
p1
p2
p3
df_all <- bind_rows(df_100, df_1000, df_5000) %>%
mutate(timestamp = ymd_hms(timestamp)) %>%
group_by(docs) %>%
mutate(hours = as.numeric(difftime(timestamp, min(timestamp), units = "hours"))) %>%
ungroup() %>%
filter(hours <= 10)
# Plot
p3 <- ggplot(df_all, aes(x = hours, y = test_acc, color = docs, linetype = docs, shape = docs)) +
geom_line() +
geom_point(size = 1) +
scale_color_brewer(
palette = "Set1",
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
scale_linetype_manual(
values = c("100" = "dashed", "1000" = "solid", "5000" = "dotdash"),
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
scale_shape_manual(
values = c("100" = 15, "1000" = 16, "5000" = 17),
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
guides(
color = guide_legend(override.aes = list(shape = c(15, 16, 17))),
shape = "none"
) +
labs(x = "Hours",
y = "Accuracy",
color = NULL,
linetype = NULL) +
theme_bw(base_size = 12) +
theme(
legend.position = "bottom",
legend.direction = "horizontal",
legend.background = element_blank(),     # no frame
legend.box.background = element_blank(), # no surrounding box
legend.key = element_blank(),            # no key boxes
legend.margin = margin(0, 0, 0, 0),
legend.box.spacing = unit(2, "pt"),
panel.grid.major = element_line(linetype = "dashed"),
axis.title = element_text(size = 9),
axis.text = element_text(size = 9),
plot.margin = margin(t = 2, r = 2, b = 2, l = 2, unit = "pt")
)
print_plot(p3, "dsi", height=2)
# Display both plots
p1
p2
p3
df_all <- bind_rows(df_100, df_1000, df_5000) %>%
mutate(timestamp = ymd_hms(timestamp)) %>%
group_by(docs) %>%
mutate(hours = as.numeric(difftime(timestamp, min(timestamp), units = "hours"))) %>%
ungroup() %>%
filter(hours <= 12)
# Plot
p3 <- ggplot(df_all, aes(x = hours, y = test_acc, color = docs, linetype = docs, shape = docs)) +
geom_line() +
geom_point(size = 1) +
scale_color_brewer(
palette = "Set1",
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
scale_linetype_manual(
values = c("100" = "dashed", "1000" = "solid", "5000" = "dotdash"),
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
scale_shape_manual(
values = c("100" = 15, "1000" = 16, "5000" = 17),
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
guides(
color = guide_legend(override.aes = list(shape = c(15, 16, 17))),
shape = "none"
) +
labs(x = "Hours",
y = "Accuracy",
color = NULL,
linetype = NULL) +
theme_bw(base_size = 12) +
theme(
legend.position = "bottom",
legend.direction = "horizontal",
legend.background = element_blank(),     # no frame
legend.box.background = element_blank(), # no surrounding box
legend.key = element_blank(),            # no key boxes
legend.margin = margin(0, 0, 0, 0),
legend.box.spacing = unit(2, "pt"),
panel.grid.major = element_line(linetype = "dashed"),
axis.title = element_text(size = 9),
axis.text = element_text(size = 9),
plot.margin = margin(t = 2, r = 2, b = 2, l = 2, unit = "pt")
)
print_plot(p3, "dsi", height=2)
# Display both plots
p1
p2
p3
df_all <- bind_rows(df_100, df_1000, df_5000) %>%
mutate(timestamp = ymd_hms(timestamp)) %>%
group_by(docs) %>%
mutate(hours = as.numeric(difftime(timestamp, min(timestamp), units = "hours"))) %>%
ungroup() %>%
filter(hours <= 10)
# Plot
p3 <- ggplot(df_all, aes(x = hours, y = test_acc, color = docs, linetype = docs, shape = docs)) +
geom_line() +
geom_point(size = 1) +
scale_color_brewer(
palette = "Set1",
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
scale_linetype_manual(
values = c("100" = "dashed", "1000" = "solid", "5000" = "dotdash"),
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
scale_shape_manual(
values = c("100" = 15, "1000" = 16, "5000" = 17),
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
guides(
color = guide_legend(override.aes = list(shape = c(15, 16, 17))),
shape = "none"
) +
labs(x = "Hours",
y = "Accuracy",
color = NULL,
linetype = NULL) +
theme_bw(base_size = 12) +
theme(
legend.position = "bottom",
legend.direction = "horizontal",
legend.background = element_blank(),     # no frame
legend.box.background = element_blank(), # no surrounding box
legend.key = element_blank(),            # no key boxes
legend.margin = margin(0, 0, 0, 0),
legend.box.spacing = unit(2, "pt"),
panel.grid.major = element_line(linetype = "dashed"),
axis.title = element_text(size = 9),
axis.text = element_text(size = 9),
plot.margin = margin(t = 2, r = 2, b = 2, l = 2, unit = "pt")
)
print_plot(p3, "dsi", height=2)
# Display both plots
p1
p2
p3
# Plot
p3 <- ggplot(df_all, aes(x = hours, y = test_acc, color = docs, linetype = docs, shape = docs)) +
geom_line() +
geom_point(size = 1) +
scale_color_brewer(
palette = "Set1",
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
scale_linetype_manual(
values = c("100" = "dashed", "1000" = "solid", "5000" = "dotdash"),
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
scale_shape_manual(
values = c("100" = 15, "1000" = 16, "5000" = 17),
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
guides(
color = guide_legend(override.aes = list(shape = c(15, 16, 17))),
shape = "none"
) +
labs(x = "Hours of Training",
y = "Accuracy",
color = NULL,
linetype = NULL) +
theme_bw(base_size = 12) +
theme(
legend.position = "bottom",
legend.direction = "horizontal",
legend.background = element_blank(),     # no frame
legend.box.background = element_blank(), # no surrounding box
legend.key = element_blank(),            # no key boxes
legend.margin = margin(0, 0, 0, 0),
legend.box.spacing = unit(2, "pt"),
panel.grid.major = element_line(linetype = "dashed"),
axis.title = element_text(size = 9),
axis.text = element_text(size = 9),
plot.margin = margin(t = 2, r = 2, b = 2, l = 2, unit = "pt")
)
p3 <- ggplot(df_all, aes(x = hours, y = test_acc, color = docs, linetype = docs, shape = docs)) +
geom_line() +
geom_point(size = 1) +
scale_color_brewer(
palette = "Set1",
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
scale_linetype_manual(
values = c("100" = "dashed", "1000" = "solid", "5000" = "dotdash"),
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
scale_shape_manual(
values = c("100" = 15, "1000" = 16, "5000" = 17),
labels = c("100" = "100 docs", "1000" = "1000 docs", "5000" = "5000 docs")
) +
guides(
color = guide_legend(override.aes = list(shape = c(15, 16, 17))),
shape = "none"
) +
labs(x = "Hours of Training",
y = "Accuracy",
color = NULL,
linetype = NULL) +
theme_bw(base_size = 12) +
theme(
legend.position = "bottom",
legend.direction = "horizontal",
legend.background = element_blank(),     # no frame
legend.box.background = element_blank(), # no surrounding box
legend.key = element_blank(),            # no key boxes
legend.margin = margin(0, 0, 0, 0),
legend.box.spacing = unit(2, "pt"),
panel.grid.major = element_line(linetype = "dashed"),
axis.title = element_text(size = 9),
axis.text = element_text(size = 9),
plot.margin = margin(t = 2, r = 2, b = 2, l = 2, unit = "pt")
)
print_plot(p3, "dsi", height=2)
# Display both plots
p1
p2
p3
p1 <- ggplot() +
geom_line(data = df, aes(pct, Value, color = Metric, linetype = Metric)) +
geom_point(data = df, aes(pct, Value, shape = Metric, color = Metric)) +
geom_line(data = h_line_df, aes(pct, Value), color = "black", linetype = "dotted", size = 1) +
geom_line(data = random_line_df, aes(pct, Value), color = "grey50", linetype = "dotdash", size = 1) +
geom_text(data = tibble(pct = 0, Value = mean_loc, label = "Local-only"),
aes(pct, Value, label = label), vjust = -0.5, hjust = 0, size = 3, color = "black") +
geom_text(data = tibble(pct = 0, Value = 1/5.5, label = "Random"),
aes(pct, Value, label = label), vjust = -0.5, hjust = 0, size = 3, color = "grey50") +
scale_y_continuous(name = "MRR") +
scale_color_manual(
values = c(
"With Defense" = "#368544",
"Naive" = "#CC3329",
"Oracle" = "#1E90FF"
),
breaks = c("Naive", "With Defense", "Oracle")
) +
scale_linetype_manual(
values = c(
"With Defense" = "twodash",
"Naive" = "dashed",
"Oracle" = "solid"
),
breaks = c("Naive", "With Defense", "Oracle")
) +
scale_shape_manual(
values = c(
"With Defense" = 16,
"Naive" = 15,
"Oracle" = 17
),
guide = "none"
) +
guides(color = guide_legend(override.aes = list(shape = c(15, 16, 17)))) +
labs(x = "Adversarial Nodes in Network (%)", color = NULL, linetype = NULL) +
theme_bw(base_size = 12) +
theme(
legend.position = "bottom",
panel.grid.major = element_line(linetype = "dashed"),
axis.title = element_text(size = 9),
axis.text = element_text(size = 9),
legend.text = element_text(size = 9),
legend.title = element_text(size = 9)
)
